<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
       	   http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 配置扫描创建service对象 -->
    <context:component-scan base-package="cn.zbit.service">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
     
	<!-- 配置DBCP数据源 -->
	<bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driver}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.user}"/>
	    <property name="password" value="${jdbc.password}"/>
	    <property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
		<!-- sql 心跳 -->
		<property name= "testWhileIdle" value="true"/>
		<property name= "testOnBorrow" value="false"/>
		<property name= "testOnReturn" value="false"/>
		<property name= "validationQuery" value="select 1"/>
		<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
		<property name= "numTestsPerEvictionRun" value="${jdbc.maxActive}"/>
	</bean>
	
	<context:property-placeholder location="classpath:database.properties"/>
	
	<!-- 配置SQLSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引入数据源组件 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 引入Mybatis配置文件中的配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 使用MapperScannerConfigure创建mapper对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.zbit.mapper"></property>
		<!-- 只扫描带有指定注解的mapper接口 -->
		<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
	</bean>
	
	<!-- 配置声明式事务 -->
	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 定义切入点表达式 -->
	<aop:config proxy-target-class="false">
		<aop:pointcut expression="execution(* cn.zbit.service..*.*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
	<!-- 定义事务规则 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*"/>
			<tx:method name="update*"/>
			<tx:method name="modify*"/>
			<tx:method name="delete*"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
</beans>